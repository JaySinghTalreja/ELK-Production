input {
    beats {
        port => 5044
    }
    stdin {}
}

filter {
    # if [tags][json] {
    #     json {
    #         source => "message"
    #         target => "message"
    #         # remove_field => ["message"]
    #         remove_field => ["event"]
    #     } 
    # }
    json {
        source => "message"
        target => "message"
        remove_field => ["input", "agent", "@timestamp", "ecs", "log", "@metadata", "@version", "host", "event", "tags"]
        # remove_field = > ["@metadata","@version", "log", "agent", "host", "tags", "@timestamp", "event", "input", "ecs", "version"]
        # add_field => { "message" => "%{message}" }
        # remove_field => ["message"]

        # source => "message"
        # remove_field => "*"
        # add_field => { "message" => "%{message}" }
    }
    # date {
    #     match => [ "timestamp", "ISO8601" ]
    #     target => "parsed_timestamp"
    # }
    if([message][timestamp]) {
        # mutate {
        #     convert => { "[message][timestamp]" => "string" }
        # }

        #Working code starts here
        ruby {
            code => "event.set('date', event.get('message')['timestamp'])"
        }
        #Ruby filter to parse the timestamp_field and split it into date and time and get only date out of it
        ruby {
            code => "event.set('date', event.get('date').split(' ')[0])"
        }


        #working code ends here
    }

    #assign date to a variable

    # ruby {
    #     code => "event.set('parsed_date', event.get('timestamp_field').strftime('%Y-%m-%d'))"
    # }
    # date {
    #     match => [ "timestamp_field", "YYYY-MM-dd" ]
    #     target => "parsed_timestamp"
    # }
    # ruby {
    #     code => "event.set('date', event.get('parsed_timestamp').strftime('%Y-%m-%d'))"
    # }
}

output {
    stdout { 
        codec => rubydebug 
        { 
            metadata => true 
        }
    }
    elasticsearch {
        hosts => ["${ELASTICSEARCH_HOST_PORT}"]
        # hosts => ["host.docker.internal:9200"]
        # user => "${ELASTIC_USERNAME}" 
        # password => "${ELASTIC_PASSWORD}"
        # index => "logs-%{+YYYY.MM.dd}"
        index => "logs-%{date}"
        # document_type => "logstash"
        # template => "/etc/logstash/templates/logstash.json"
        # template_name => "logstash"
        # template_overwrite => true
    }
}